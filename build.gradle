
description = 'Log4J2 Layout for outputting LogStash json_event format'

apply plugin: 'java'

version='1.0.1-SNAPSHOT'
group = 'net.logstash.log4j2'

repositories {
	mavenCentral()
}

apply from: file('gradle/maven.gradle')

dependencies {
    
	// JACKSON for JSONification 
	def jacksonVersion = '2.3.0'
	compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
	compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
	compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
	
	def log4j2Version = '2.0-rc1';
	compile "org.apache.logging.log4j:log4j-api:$log4j2Version"
	compile "org.apache.logging.log4j:log4j-core:$log4j2Version"
			
	// APACHE COMMONS
	compile 'org.apache.commons:commons-lang3:3.2.1'

	// Testing stuff, hamcrest comes first please 
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.testng:testng:6.8.5'
	testCompile 'commons-collections:commons-collections:3.2.1'
}


task sourcesJar(type: Jar, dependsOn:classes) {
     classifier = 'sources'
     from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
     classifier = 'javadoc'
     from javadoc.destinationDir
}

artifacts {
     archives sourcesJar
     archives javadocJar
}



test {
	useTestNG() {
		excludeGroups 'integration'
	}
	
}

task integrationTest(type: Test, dependsOn: ['test']) {
	logger.info 'Integration Tests'
	useTestNG() {
	}
	include '**/*IT.class'

	// copy resource over???

	// set a system property for the test JVM(s)
	
	doFirst {
		logger.info 'Logstash required for integration tests'
//  start logstash or check for logstash and fail
	}

	doLast {
//		logger.info 'Stop Logstash'
// stop logstash
	}
}

